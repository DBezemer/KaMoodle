diff --git a/locallib.php b/locallib.php
index 2a5e064..490f00c 100644
--- a/locallib.php
+++ b/locallib.php
@@ -1854,61 +1854,18 @@ class kaltura_connection {
     }
 
     /**
-     * Returns true if the connection is active.  Otherwise fase
-     *
-     * @param - none
-     * @return bool - true is active, false if timed out or not active
-     */
-    private function connection_active() {
-
-        // Connection is not active
-        if (empty(self::$connection) ||
-            empty(self::$timestarted) ||
-            empty(self::$timeout)) {
-
-            return false;
-        }
-
-        // Calculate session time remaining
-        $time_left = time() - self::$timestarted;
-
-        // If the session time has expired
-        if ($time_left >= self::$timeout) {
-//            print_object('time started: ' . self::$timestarted);
-//            print_object('session time out: ' . self::$timeout);
-//            print_object('time left '. $time_left);
-
-            return false;
-        }
-
-        return true;
-    }
-
-    /**
      * Get the connection object.  Pass true to renew the connection
      *
-     * @param bool - true to renew the session if it has expired.  Otherwise
-     * false
-     * @param int - seconds to keep the session alive, if zero is passed the
+     * @param bool $renew true to renew the session if it has expired.  Otherwise
+     * false. (OBSOLETE the connection is always renewed.  TODO: remove this parameter
+     * from the function and areas where this method is referenced in all the plug-ins)
+     * @param int $timeout seconds to keep the session alive, if zero is passed the
      * last time out value will be used
-     * @return mixed - Kaltura connection object, or false if connection failed
+     * @return object A Kaltura KalturaClient object
      */
     public function get_connection($renew = true, $timeout = 0) {
-
-        $connection = false;
-
-        // If connection is active
-        if ($this->connection_active()) {
-            $connection = self::$connection;
-        } else {
-
-            if ($renew) {
-                // Renew connection
-                $connection = $this->renew_connection($timeout);
-            }
-        }
-
-        return $connection;
+        self::$connection = local_kaltura_login(true, '', $timeout);
+        return self:$connection;
     }
 
     /**
@@ -1930,34 +1887,6 @@ class kaltura_connection {
         return self::$timestarted;
     }
 
-    /**
-     * Renew the connection to Kaltura
-     *
-     * @param int - seconds to keep session alive
-     * @return obj - Kaltura connection object
-     */
-    public function renew_connection($timeout) {
-
-        self::$timeout = (0 == $timeout) ? self::$timeout : $timeout;
-
-        self::$connection = local_kaltura_login(true, '', $timeout);
-
-        /** If connected, set the time the session started.
-         * Otherwise set the start time to zero and the connection object to false
-         */
-        if (!empty(self::$connection)) {
-
-            self::$timestarted  = time();
-
-        } else {
-
-            self::$timestarted = 0;
-            self::$connection = false;
-        }
-
-        return self::$connection;
-    }
-
     public function __destruct() {
         global $SESSION;
 
